{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.startWebLayoutAnimation = startWebLayoutAnimation;\nexports.tryActivateLayoutTransition = tryActivateLayoutTransition;\nvar _config = require(\"./config\");\nvar _commonTypes = require(\"../animationBuilder/commonTypes\");\nvar _createAnimation = require(\"./createAnimation\");\nvar _componentUtils = require(\"./componentUtils\");\nvar _domUtils = require(\"./domUtils\");\nfunction chooseConfig(animationType, props) {\n  var config = animationType === _commonTypes.LayoutAnimationType.ENTERING ? props.entering : animationType === _commonTypes.LayoutAnimationType.EXITING ? props.exiting : animationType === _commonTypes.LayoutAnimationType.LAYOUT ? props.layout : null;\n  return config;\n}\nfunction checkUndefinedAnimationFail(initialAnimationName, isLayoutTransition) {\n  if (initialAnimationName in _config.Animations || isLayoutTransition) {\n    return false;\n  }\n  console.warn(\"[Reanimated] Couldn't load entering/exiting animation. Current version supports only predefined animations with modifiers: duration, delay, easing, randomizeDelay, wtihCallback, reducedMotion.\");\n  return true;\n}\nfunction chooseAction(animationType, animationConfig, element, transitionData, transform) {\n  switch (animationType) {\n    case _commonTypes.LayoutAnimationType.ENTERING:\n      (0, _componentUtils.setElementAnimation)(element, animationConfig);\n      break;\n    case _commonTypes.LayoutAnimationType.LAYOUT:\n      transitionData.reversed = animationConfig.reversed;\n      (0, _componentUtils.handleLayoutTransition)(element, animationConfig, transitionData, transform);\n      break;\n    case _commonTypes.LayoutAnimationType.EXITING:\n      (0, _componentUtils.handleExitingAnimation)(element, animationConfig);\n      break;\n  }\n}\nfunction tryGetAnimationConfigWithTransform(props, animationType) {\n  var config = chooseConfig(animationType, props);\n  if (!config) {\n    return null;\n  }\n  var isLayoutTransition = animationType === _commonTypes.LayoutAnimationType.LAYOUT;\n  var initialAnimationName = typeof config === 'function' ? config.name : config.constructor.name;\n  var shouldFail = checkUndefinedAnimationFail(initialAnimationName, isLayoutTransition);\n  if (shouldFail) {\n    return null;\n  }\n  var transform = (0, _componentUtils.extractTransformFromStyle)(props.style);\n  var animationName = transform ? (0, _createAnimation.createAnimationWithExistingTransform)(initialAnimationName, transform) : initialAnimationName;\n  var animationConfig = (0, _componentUtils.getProcessedConfig)(animationName, animationType, config, initialAnimationName);\n  return {\n    animationConfig: animationConfig,\n    transform: transform\n  };\n}\nfunction startWebLayoutAnimation(props, element, animationType, transitionData) {\n  var maybeAnimationConfigWithTransform = tryGetAnimationConfigWithTransform(props, animationType);\n  if (maybeAnimationConfigWithTransform) {\n    var animationConfig = maybeAnimationConfigWithTransform.animationConfig,\n      transform = maybeAnimationConfigWithTransform.transform;\n    chooseAction(animationType, animationConfig, element, transitionData, transform);\n  } else {\n    (0, _componentUtils.makeElementVisible)(element, 0);\n  }\n}\nfunction tryActivateLayoutTransition(props, element, snapshot) {\n  if (!props.layout) {\n    return;\n  }\n  var rect = element.getBoundingClientRect();\n  if ((0, _domUtils.areDOMRectsEqual)(rect, snapshot)) {\n    return;\n  }\n  var transitionData = {\n    translateX: snapshot.x - rect.x,\n    translateY: snapshot.y - rect.y,\n    scaleX: snapshot.width / rect.width,\n    scaleY: snapshot.height / rect.height,\n    reversed: false\n  };\n  startWebLayoutAnimation(props, element, _commonTypes.LayoutAnimationType.LAYOUT, transitionData);\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","startWebLayoutAnimation","tryActivateLayoutTransition","_config","require","_commonTypes","_createAnimation","_componentUtils","_domUtils","chooseConfig","animationType","props","config","LayoutAnimationType","ENTERING","entering","EXITING","exiting","LAYOUT","layout","checkUndefinedAnimationFail","initialAnimationName","isLayoutTransition","Animations","console","warn","chooseAction","animationConfig","element","transitionData","transform","setElementAnimation","reversed","handleLayoutTransition","handleExitingAnimation","tryGetAnimationConfigWithTransform","name","constructor","shouldFail","extractTransformFromStyle","style","animationName","createAnimationWithExistingTransform","getProcessedConfig","maybeAnimationConfigWithTransform","makeElementVisible","snapshot","rect","getBoundingClientRect","areDOMRectsEqual","translateX","x","translateY","y","scaleX","width","scaleY","height"],"sources":["D:\\course\\ReactNative\\Tasks\\node_modules\\react-native-reanimated\\lib\\module\\reanimated2\\layoutReanimation\\web\\animationsManager.ts"],"sourcesContent":["'use strict';\n\nimport type { AnimationConfig, AnimationNames, CustomConfig } from './config';\nimport { Animations } from './config';\nimport type { AnimatedComponentProps } from '../../../createAnimatedComponent/commonTypes';\nimport { LayoutAnimationType } from '../animationBuilder/commonTypes';\nimport type { StyleProps } from '../../commonTypes';\nimport { createAnimationWithExistingTransform } from './createAnimation';\nimport {\n  extractTransformFromStyle,\n  getProcessedConfig,\n  handleExitingAnimation,\n  handleLayoutTransition,\n  makeElementVisible,\n  setElementAnimation,\n} from './componentUtils';\nimport { areDOMRectsEqual } from './domUtils';\nimport type { TransformsStyle } from 'react-native';\nimport type { TransitionData } from './animationParser';\n\nfunction chooseConfig<ComponentProps extends Record<string, unknown>>(\n  animationType: LayoutAnimationType,\n  props: Readonly<AnimatedComponentProps<ComponentProps>>\n) {\n  const config =\n    animationType === LayoutAnimationType.ENTERING\n      ? props.entering\n      : animationType === LayoutAnimationType.EXITING\n      ? props.exiting\n      : animationType === LayoutAnimationType.LAYOUT\n      ? props.layout\n      : null;\n\n  return config;\n}\n\nfunction checkUndefinedAnimationFail(\n  initialAnimationName: string,\n  isLayoutTransition: boolean\n) {\n  // This prevents crashes if we try to set animations that are not defined.\n  // We don't care about layout transitions since they're created dynamically\n  if (initialAnimationName in Animations || isLayoutTransition) {\n    return false;\n  }\n\n  console.warn(\n    \"[Reanimated] Couldn't load entering/exiting animation. Current version supports only predefined animations with modifiers: duration, delay, easing, randomizeDelay, wtihCallback, reducedMotion.\"\n  );\n\n  return true;\n}\n\nfunction chooseAction(\n  animationType: LayoutAnimationType,\n  animationConfig: AnimationConfig,\n  element: HTMLElement,\n  transitionData: TransitionData,\n  transform: TransformsStyle['transform'] | undefined\n) {\n  switch (animationType) {\n    case LayoutAnimationType.ENTERING:\n      setElementAnimation(element, animationConfig);\n      break;\n    case LayoutAnimationType.LAYOUT:\n      transitionData.reversed = animationConfig.reversed;\n\n      handleLayoutTransition(\n        element,\n        animationConfig,\n        transitionData,\n        transform\n      );\n      break;\n    case LayoutAnimationType.EXITING:\n      handleExitingAnimation(element, animationConfig);\n      break;\n  }\n}\n\nfunction tryGetAnimationConfigWithTransform<\n  ComponentProps extends Record<string, unknown>\n>(\n  props: Readonly<AnimatedComponentProps<ComponentProps>>,\n  animationType: LayoutAnimationType\n) {\n  const config = chooseConfig(animationType, props);\n  if (!config) {\n    return null;\n  }\n\n  const isLayoutTransition = animationType === LayoutAnimationType.LAYOUT;\n  const initialAnimationName =\n    typeof config === 'function' ? config.name : config.constructor.name;\n\n  const shouldFail = checkUndefinedAnimationFail(\n    initialAnimationName,\n    isLayoutTransition\n  );\n\n  if (shouldFail) {\n    return null;\n  }\n\n  const transform = extractTransformFromStyle(props.style as StyleProps);\n\n  const animationName = transform\n    ? createAnimationWithExistingTransform(initialAnimationName, transform)\n    : initialAnimationName;\n\n  const animationConfig = getProcessedConfig(\n    animationName,\n    animationType,\n    config as CustomConfig,\n    initialAnimationName as AnimationNames\n  );\n\n  return { animationConfig, transform };\n}\n\nexport function startWebLayoutAnimation<\n  ComponentProps extends Record<string, unknown>\n>(\n  props: Readonly<AnimatedComponentProps<ComponentProps>>,\n  element: HTMLElement,\n  animationType: LayoutAnimationType,\n  transitionData?: TransitionData\n) {\n  const maybeAnimationConfigWithTransform = tryGetAnimationConfigWithTransform(\n    props,\n    animationType\n  );\n\n  if (maybeAnimationConfigWithTransform) {\n    const { animationConfig, transform } = maybeAnimationConfigWithTransform;\n\n    chooseAction(\n      animationType,\n      animationConfig,\n      element,\n      transitionData as TransitionData,\n      transform\n    );\n  } else {\n    makeElementVisible(element, 0);\n  }\n}\n\nexport function tryActivateLayoutTransition<\n  ComponentProps extends Record<string, unknown>\n>(\n  props: Readonly<AnimatedComponentProps<ComponentProps>>,\n  element: HTMLElement,\n  snapshot: DOMRect\n) {\n  if (!props.layout) {\n    return;\n  }\n\n  const rect = element.getBoundingClientRect();\n\n  if (areDOMRectsEqual(rect, snapshot)) {\n    return;\n  }\n\n  const transitionData: TransitionData = {\n    translateX: snapshot.x - rect.x,\n    translateY: snapshot.y - rect.y,\n    scaleX: snapshot.width / rect.width,\n    scaleY: snapshot.height / rect.height,\n    reversed: false, // This field is used only in `SequencedTransition`, so by default it will be false\n  };\n\n  startWebLayoutAnimation(\n    props,\n    element,\n    LayoutAnimationType.LAYOUT,\n    transitionData\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}