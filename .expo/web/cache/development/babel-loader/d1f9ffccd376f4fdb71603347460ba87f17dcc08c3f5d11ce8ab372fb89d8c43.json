{"ast":null,"code":"'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useEvent = useEvent;\nvar _react = require(\"react\");\nvar _WorkletEventHandler = _interopRequireDefault(require(\"../WorkletEventHandler\"));\nfunction useEvent(handler) {\n  var eventNames = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var rebuild = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var initRef = (0, _react.useRef)(null);\n  if (initRef.current === null) {\n    initRef.current = new _WorkletEventHandler.default(handler, eventNames);\n  } else if (rebuild) {\n    initRef.current.updateWorklet(handler);\n  }\n  return initRef;\n}","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","useEvent","_react","_WorkletEventHandler","handler","eventNames","arguments","length","undefined","rebuild","initRef","useRef","current","WorkletEventHandler","updateWorklet"],"sources":["D:\\course\\ReactNative\\Tasks\\node_modules\\react-native-reanimated\\lib\\module\\reanimated2\\hook\\useEvent.ts"],"sourcesContent":["'use strict';\nimport type { MutableRefObject } from 'react';\nimport { useRef } from 'react';\nimport WorkletEventHandler from '../WorkletEventHandler';\nimport type { ReanimatedEvent } from './commonTypes';\n\n/**\n * Worklet to provide as an argument to `useEvent` hook.\n */\nexport type EventHandler<\n  Event extends object,\n  Context extends Record<string, unknown> = never\n> = (event: ReanimatedEvent<Event>, context?: Context) => void;\n\nexport type EventHandlerProcessed<\n  Event extends object,\n  Context extends Record<string, unknown> = never\n> = (event: Event, context?: Context) => void;\n\nexport type EventHandlerInternal<Event extends object> = MutableRefObject<\n  WorkletEventHandler<Event>\n>;\n\n/**\n * Lets you run a function whenever a specified native event occurs.\n *\n * @param handler - A function that receives an event object with event data - {@link EventHandler}.\n * @param eventNames - An array of event names the `handler` callback will react to.\n * @param rebuild - Whether the event handler should be rebuilt. Defaults to `false`.\n * @returns A function that will be called when the event occurs - {@link EventHandlerProcessed}.\n * @see https://docs.swmansion.com/react-native-reanimated/docs/advanced/useEvent\n */\n// @ts-expect-error This overload is required by our API.\n// We don't know which properites of a component that is made into\n// an AnimatedComponent are event handlers and we don't want to force the user to define it.\n// Therefore we disguise `useEvent` return type as a simple function and we handle\n// it being a React Ref in `createAnimatedComponent`.\nexport function useEvent<\n  Event extends object,\n  Context extends Record<string, unknown> = never\n>(\n  handler: EventHandler<Event, Context>,\n  eventNames?: string[],\n  rebuild?: boolean\n): EventHandlerProcessed<Event, Context>;\n\nexport function useEvent<Event extends object, Context = never>(\n  handler: (event: ReanimatedEvent<Event>, context?: Context) => void,\n  eventNames: string[] = [],\n  rebuild = false\n): EventHandlerInternal<Event> {\n  const initRef = useRef<WorkletEventHandler<Event> | null>(null);\n  if (initRef.current === null) {\n    initRef.current = new WorkletEventHandler<Event>(handler, eventNames);\n  } else if (rebuild) {\n    initRef.current.updateWorklet(handler);\n  }\n\n  // We cast it since we don't want to expose initial null value outside.\n  return initRef as EventHandlerInternal<Event>;\n}\n"],"mappings":"AAAA,YAAY;;AAAA,IAAAA,sBAAA,GAAAC,OAAA;AAAAC,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,KAAA;AAAA;AAAAD,OAAA,CAAAE,QAAA,GAAAA,QAAA;AAEZ,IAAAC,MAAA,GAAAN,OAAA;AACA,IAAAO,oBAAA,GAAAR,sBAAA,CAAAC,OAAA;AA2CO,SAASK,QAAQA,CACtBG,OAAmE,EAGtC;EAAA,IAF7BC,UAAoB,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;EAAA,IACzBG,OAAO,GAAAH,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,KAAK;EAEf,IAAMI,OAAO,GAAG,IAAAC,aAAM,EAAoC,IAAI,CAAC;EAC/D,IAAID,OAAO,CAACE,OAAO,KAAK,IAAI,EAAE;IAC5BF,OAAO,CAACE,OAAO,GAAG,IAAIC,4BAAmB,CAAQT,OAAO,EAAEC,UAAU,CAAC;EACvE,CAAC,MAAM,IAAII,OAAO,EAAE;IAClBC,OAAO,CAACE,OAAO,CAACE,aAAa,CAACV,OAAO,CAAC;EACxC;EAGA,OAAOM,OAAO;AAChB"},"metadata":{},"sourceType":"script","externalDependencies":[]}