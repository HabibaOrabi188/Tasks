{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Drawer = Drawer;\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar Reanimated = _interopRequireWildcard(require(\"react-native-reanimated\"));\nvar _constants = require(\"../constants\");\nvar _GestureHandler = require(\"./GestureHandler\");\nvar _excluded = [\"useLegacyImplementation\", \"layout\", \"drawerType\", \"drawerPosition\", \"drawerStyle\", \"swipeEnabled\", \"swipeEdgeWidth\", \"swipeMinDistance\", \"swipeMinVelocity\", \"keyboardDismissMode\", \"hideStatusBarOnOpen\", \"statusBarAnimation\", \"style\"];\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nvar getDefaultDrawerWidth = function getDefaultDrawerWidth(_ref) {\n  var height = _ref.height,\n    width = _ref.width;\n  var smallerAxisSize = Math.min(height, width);\n  var isLandscape = width > height;\n  var isTablet = smallerAxisSize >= 600;\n  var appBarHeight = _reactNative.Platform.OS === 'ios' ? isLandscape ? 32 : 44 : 56;\n  var maxWidth = isTablet ? 320 : 280;\n  return Math.min(smallerAxisSize - appBarHeight, maxWidth);\n};\nfunction Drawer(_ref2) {\n  var _Reanimated$isConfigu;\n  var _ref2$useLegacyImplem = _ref2.useLegacyImplementation,\n    useLegacyImplementation = _ref2$useLegacyImplem === void 0 ? !((_Reanimated$isConfigu = Reanimated.isConfigured) !== null && _Reanimated$isConfigu !== void 0 && _Reanimated$isConfigu.call(Reanimated)) : _ref2$useLegacyImplem,\n    customLayout = _ref2.layout,\n    _ref2$drawerType = _ref2.drawerType,\n    drawerType = _ref2$drawerType === void 0 ? _reactNative.Platform.select({\n      ios: 'slide',\n      default: 'front'\n    }) : _ref2$drawerType,\n    _ref2$drawerPosition = _ref2.drawerPosition,\n    drawerPosition = _ref2$drawerPosition === void 0 ? _reactNative.I18nManager.getConstants().isRTL ? 'right' : 'left' : _ref2$drawerPosition,\n    drawerStyle = _ref2.drawerStyle,\n    _ref2$swipeEnabled = _ref2.swipeEnabled,\n    swipeEnabled = _ref2$swipeEnabled === void 0 ? _reactNative.Platform.OS !== 'web' && _reactNative.Platform.OS !== 'windows' && _reactNative.Platform.OS !== 'macos' : _ref2$swipeEnabled,\n    _ref2$swipeEdgeWidth = _ref2.swipeEdgeWidth,\n    swipeEdgeWidth = _ref2$swipeEdgeWidth === void 0 ? 32 : _ref2$swipeEdgeWidth,\n    _ref2$swipeMinDistanc = _ref2.swipeMinDistance,\n    swipeMinDistance = _ref2$swipeMinDistanc === void 0 ? _constants.SWIPE_MIN_DISTANCE : _ref2$swipeMinDistanc,\n    _ref2$swipeMinVelocit = _ref2.swipeMinVelocity,\n    swipeMinVelocity = _ref2$swipeMinVelocit === void 0 ? _constants.SWIPE_MIN_VELOCITY : _ref2$swipeMinVelocit,\n    _ref2$keyboardDismiss = _ref2.keyboardDismissMode,\n    keyboardDismissMode = _ref2$keyboardDismiss === void 0 ? 'on-drag' : _ref2$keyboardDismiss,\n    _ref2$hideStatusBarOn = _ref2.hideStatusBarOnOpen,\n    hideStatusBarOnOpen = _ref2$hideStatusBarOn === void 0 ? false : _ref2$hideStatusBarOn,\n    _ref2$statusBarAnimat = _ref2.statusBarAnimation,\n    statusBarAnimation = _ref2$statusBarAnimat === void 0 ? 'slide' : _ref2$statusBarAnimat,\n    style = _ref2.style,\n    rest = (0, _objectWithoutProperties2.default)(_ref2, _excluded);\n  var legacyImplemenationNotAvailable = require('react-native-reanimated').abs === undefined;\n  if (useLegacyImplementation && legacyImplemenationNotAvailable) {\n    throw new Error('The `useLegacyImplementation` prop is not available with Reanimated 3 as it no longer includes support for Reanimated 1 legacy API. Remove the `useLegacyImplementation` prop from `Drawer.Navigator` to be able to use it.');\n  }\n  var Drawer = useLegacyImplementation ? require('./legacy/Drawer').Drawer : require('./modern/Drawer').Drawer;\n  var windowDimensions = (0, _reactNative.useWindowDimensions)();\n  var layout = customLayout != null ? customLayout : windowDimensions;\n  return React.createElement(_GestureHandler.GestureHandlerRootView, {\n    style: [styles.container, style]\n  }, React.createElement(Drawer, _extends({}, rest, {\n    layout: layout,\n    drawerType: drawerType,\n    drawerPosition: drawerPosition,\n    drawerStyle: [{\n      width: getDefaultDrawerWidth(layout)\n    }, styles.drawer, drawerStyle],\n    swipeEnabled: swipeEnabled,\n    swipeEdgeWidth: swipeEdgeWidth,\n    swipeMinDistance: swipeMinDistance,\n    swipeMinVelocity: swipeMinVelocity,\n    keyboardDismissMode: keyboardDismissMode,\n    hideStatusBarOnOpen: hideStatusBarOnOpen,\n    statusBarAnimation: statusBarAnimation\n  })));\n}\nvar styles = _reactNative.StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  drawer: {\n    backgroundColor: 'white'\n  }\n});","map":{"version":3,"names":["React","_interopRequireWildcard","require","_reactNative","Reanimated","_constants","_GestureHandler","_excluded","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","getDefaultDrawerWidth","_ref","height","width","smallerAxisSize","Math","min","isLandscape","isTablet","appBarHeight","Platform","OS","maxWidth","Drawer","_ref2","_Reanimated$isConfigu","_ref2$useLegacyImplem","useLegacyImplementation","isConfigured","customLayout","layout","_ref2$drawerType","drawerType","select","ios","_ref2$drawerPosition","drawerPosition","I18nManager","getConstants","isRTL","drawerStyle","_ref2$swipeEnabled","swipeEnabled","_ref2$swipeEdgeWidth","swipeEdgeWidth","_ref2$swipeMinDistanc","swipeMinDistance","SWIPE_MIN_DISTANCE","_ref2$swipeMinVelocit","swipeMinVelocity","SWIPE_MIN_VELOCITY","_ref2$keyboardDismiss","keyboardDismissMode","_ref2$hideStatusBarOn","hideStatusBarOnOpen","_ref2$statusBarAnimat","statusBarAnimation","style","rest","_objectWithoutProperties2","legacyImplemenationNotAvailable","abs","undefined","Error","windowDimensions","useWindowDimensions","createElement","GestureHandlerRootView","styles","container","_extends","drawer","StyleSheet","create","flex","backgroundColor"],"sources":["D:\\course\\ReactNative\\Tasks\\node_modules\\react-native-drawer-layout\\src\\views\\Drawer.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  I18nManager,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  useWindowDimensions,\n  ViewStyle,\n} from 'react-native';\nimport * as Reanimated from 'react-native-reanimated';\n\nimport { SWIPE_MIN_DISTANCE, SWIPE_MIN_VELOCITY } from '../constants';\nimport type { DrawerProps } from '../types';\nimport { GestureHandlerRootView } from './GestureHandler';\n\ntype Props = DrawerProps & {\n  /**\n   * Whether to use the legacy implementation of the drawer.\n   * The legacy implementation uses v1 of Reanimated.\n   * The modern implementation uses v2 of Reanimated.\n   *\n   * By default, the appropriate implementation is used based on whether Reanimated v2 is configured.\n   */\n  useLegacyImplementation?: boolean;\n\n  /**\n   * Style object for the wrapper view.\n   */\n  style?: StyleProp<ViewStyle>;\n};\n\nconst getDefaultDrawerWidth = ({\n  height,\n  width,\n}: {\n  height: number;\n  width: number;\n}) => {\n  /*\n   * Default drawer width is screen width - header height\n   * with a max width of 280 on mobile and 320 on tablet\n   * https://material.io/components/navigation-drawer\n   */\n  const smallerAxisSize = Math.min(height, width);\n  const isLandscape = width > height;\n  const isTablet = smallerAxisSize >= 600;\n  const appBarHeight = Platform.OS === 'ios' ? (isLandscape ? 32 : 44) : 56;\n  const maxWidth = isTablet ? 320 : 280;\n\n  return Math.min(smallerAxisSize - appBarHeight, maxWidth);\n};\n\nexport function Drawer({\n  // Reanimated 2 is not configured\n  // @ts-expect-error: the type definitions are incomplete\n  useLegacyImplementation = !Reanimated.isConfigured?.(),\n  layout: customLayout,\n  drawerType = Platform.select({ ios: 'slide', default: 'front' }),\n  drawerPosition = I18nManager.getConstants().isRTL ? 'right' : 'left',\n  drawerStyle,\n  swipeEnabled = Platform.OS !== 'web' &&\n    Platform.OS !== 'windows' &&\n    Platform.OS !== 'macos',\n  swipeEdgeWidth = 32,\n  swipeMinDistance = SWIPE_MIN_DISTANCE,\n  swipeMinVelocity = SWIPE_MIN_VELOCITY,\n  keyboardDismissMode = 'on-drag',\n  hideStatusBarOnOpen = false,\n  statusBarAnimation = 'slide',\n  style,\n  ...rest\n}: Props) {\n  // Reanimated v3 dropped legacy v1 API\n  const legacyImplemenationNotAvailable =\n    require('react-native-reanimated').abs === undefined;\n\n  if (useLegacyImplementation && legacyImplemenationNotAvailable) {\n    throw new Error(\n      'The `useLegacyImplementation` prop is not available with Reanimated 3 as it no longer includes support for Reanimated 1 legacy API. Remove the `useLegacyImplementation` prop from `Drawer.Navigator` to be able to use it.'\n    );\n  }\n\n  const Drawer: typeof import('./modern/Drawer').Drawer =\n    useLegacyImplementation\n      ? require('./legacy/Drawer').Drawer\n      : require('./modern/Drawer').Drawer;\n\n  const windowDimensions = useWindowDimensions();\n  const layout = customLayout ?? windowDimensions;\n\n  return (\n    <GestureHandlerRootView style={[styles.container, style]}>\n      <Drawer\n        {...rest}\n        layout={layout}\n        drawerType={drawerType}\n        drawerPosition={drawerPosition}\n        drawerStyle={[\n          { width: getDefaultDrawerWidth(layout) },\n          styles.drawer,\n          drawerStyle,\n        ]}\n        swipeEnabled={swipeEnabled}\n        swipeEdgeWidth={swipeEdgeWidth}\n        swipeMinDistance={swipeMinDistance}\n        swipeMinVelocity={swipeMinVelocity}\n        keyboardDismissMode={keyboardDismissMode}\n        hideStatusBarOnOpen={hideStatusBarOnOpen}\n        statusBarAnimation={statusBarAnimation}\n      />\n    </GestureHandlerRootView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  drawer: {\n    backgroundColor: 'white',\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}