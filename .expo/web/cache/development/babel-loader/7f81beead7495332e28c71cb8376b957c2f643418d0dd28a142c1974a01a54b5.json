{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GestureHandlerWebDelegate = void 0;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _reactNative = require(\"react-native\");\nvar _PointerEventManager = _interopRequireDefault(require(\"./PointerEventManager\"));\nvar _TouchEventManager = _interopRequireDefault(require(\"./TouchEventManager\"));\nvar _State = require(\"../../State\");\nvar _utils = require(\"../utils\");\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nvar GestureHandlerWebDelegate = exports.GestureHandlerWebDelegate = function () {\n  function GestureHandlerWebDelegate() {\n    (0, _classCallCheck2.default)(this, GestureHandlerWebDelegate);\n    _defineProperty(this, \"view\", void 0);\n    _defineProperty(this, \"gestureHandler\", void 0);\n    _defineProperty(this, \"eventManagers\", []);\n  }\n  (0, _createClass2.default)(GestureHandlerWebDelegate, [{\n    key: \"getView\",\n    value: function getView() {\n      return this.view;\n    }\n  }, {\n    key: \"init\",\n    value: function init(viewRef, handler) {\n      var _this = this;\n      if (!viewRef) {\n        throw new Error(`Cannot find HTML Element for handler ${handler.getTag()}`);\n      }\n      this.gestureHandler = handler;\n      this.view = (0, _reactNative.findNodeHandle)(viewRef);\n      this.view.style['touchAction'] = 'none';\n      this.view.style['WebkitTouchCallout'] = 'none';\n      var config = handler.getConfig();\n      if (!config.userSelect) {\n        this.view.style['webkitUserSelect'] = 'none';\n        this.view.style['userSelect'] = 'none';\n      } else {\n        this.view.style['webkitUserSelect'] = config.userSelect;\n        this.view.style['userSelect'] = config.userSelect;\n      }\n      this.eventManagers.push(new _PointerEventManager.default(this.view));\n      this.eventManagers.push(new _TouchEventManager.default(this.view));\n      this.eventManagers.forEach(function (manager) {\n        return _this.gestureHandler.attachEventManager(manager);\n      });\n    }\n  }, {\n    key: \"isPointerInBounds\",\n    value: function isPointerInBounds(_ref) {\n      var x = _ref.x,\n        y = _ref.y;\n      return (0, _utils.isPointerInBounds)(this.view, {\n        x: x,\n        y: y\n      });\n    }\n  }, {\n    key: \"measureView\",\n    value: function measureView() {\n      var rect = this.view.getBoundingClientRect();\n      return {\n        pageX: rect.left,\n        pageY: rect.top,\n        width: rect.width,\n        height: rect.height\n      };\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.eventManagers.forEach(function (manager) {\n        return manager.resetManager();\n      });\n    }\n  }, {\n    key: \"tryResetCursor\",\n    value: function tryResetCursor() {\n      var config = this.gestureHandler.getConfig();\n      if (config.activeCursor && config.activeCursor !== 'auto' && this.gestureHandler.getState() === _State.State.ACTIVE) {\n        this.view.style.cursor = 'auto';\n      }\n    }\n  }, {\n    key: \"onBegin\",\n    value: function onBegin() {}\n  }, {\n    key: \"onActivate\",\n    value: function onActivate() {\n      var config = this.gestureHandler.getConfig();\n      if ((!this.view.style.cursor || this.view.style.cursor === 'auto') && config.activeCursor) {\n        this.view.style.cursor = config.activeCursor;\n      }\n    }\n  }, {\n    key: \"onEnd\",\n    value: function onEnd() {\n      this.tryResetCursor();\n    }\n  }, {\n    key: \"onCancel\",\n    value: function onCancel() {\n      this.tryResetCursor();\n    }\n  }, {\n    key: \"onFail\",\n    value: function onFail() {\n      this.tryResetCursor();\n    }\n  }]);\n  return GestureHandlerWebDelegate;\n}();","map":{"version":3,"names":["_reactNative","require","_PointerEventManager","_interopRequireDefault","_TouchEventManager","_State","_utils","GestureHandlerWebDelegate","exports","_classCallCheck2","default","_defineProperty","_createClass2","key","value","getView","view","init","viewRef","handler","_this","Error","getTag","gestureHandler","findNodeHandle","style","config","getConfig","userSelect","eventManagers","push","PointerEventManager","TouchEventManager","forEach","manager","attachEventManager","isPointerInBounds","_ref","x","y","measureView","rect","getBoundingClientRect","pageX","left","pageY","top","width","height","reset","resetManager","tryResetCursor","activeCursor","getState","State","ACTIVE","cursor","onBegin","onActivate","onEnd","onCancel","onFail"],"sources":["D:\\course\\ReactNative\\Tasks\\node_modules\\react-native-gesture-handler\\lib\\module\\web\\tools\\GestureHandlerWebDelegate.ts"],"sourcesContent":["import { findNodeHandle } from 'react-native';\nimport type GestureHandler from '../handlers/GestureHandler';\nimport {\n  GestureHandlerDelegate,\n  MeasureResult,\n} from './GestureHandlerDelegate';\nimport PointerEventManager from './PointerEventManager';\nimport TouchEventManager from './TouchEventManager';\nimport { State } from '../../State';\nimport { isPointerInBounds } from '../utils';\nimport EventManager from './EventManager';\n\nexport class GestureHandlerWebDelegate\n  implements GestureHandlerDelegate<HTMLElement>\n{\n  private view!: HTMLElement;\n  private gestureHandler!: GestureHandler;\n  private eventManagers: EventManager<unknown>[] = [];\n\n  getView(): HTMLElement {\n    return this.view;\n  }\n\n  init(viewRef: number, handler: GestureHandler): void {\n    if (!viewRef) {\n      throw new Error(\n        `Cannot find HTML Element for handler ${handler.getTag()}`\n      );\n    }\n\n    this.gestureHandler = handler;\n    this.view = findNodeHandle(viewRef) as unknown as HTMLElement;\n\n    this.view.style['touchAction'] = 'none';\n    //@ts-ignore This one disables default events on Safari\n    this.view.style['WebkitTouchCallout'] = 'none';\n\n    const config = handler.getConfig();\n\n    if (!config.userSelect) {\n      this.view.style['webkitUserSelect'] = 'none';\n      this.view.style['userSelect'] = 'none';\n    } else {\n      this.view.style['webkitUserSelect'] = config.userSelect;\n      this.view.style['userSelect'] = config.userSelect;\n    }\n\n    this.eventManagers.push(new PointerEventManager(this.view));\n    this.eventManagers.push(new TouchEventManager(this.view));\n\n    this.eventManagers.forEach((manager) =>\n      this.gestureHandler.attachEventManager(manager)\n    );\n  }\n\n  isPointerInBounds({ x, y }: { x: number; y: number }): boolean {\n    return isPointerInBounds(this.view, { x, y });\n  }\n\n  measureView(): MeasureResult {\n    const rect = this.view.getBoundingClientRect();\n\n    return {\n      pageX: rect.left,\n      pageY: rect.top,\n      width: rect.width,\n      height: rect.height,\n    };\n  }\n\n  reset(): void {\n    this.eventManagers.forEach((manager: EventManager<unknown>) =>\n      manager.resetManager()\n    );\n  }\n\n  tryResetCursor() {\n    const config = this.gestureHandler.getConfig();\n\n    if (\n      config.activeCursor &&\n      config.activeCursor !== 'auto' &&\n      this.gestureHandler.getState() === State.ACTIVE\n    ) {\n      this.view.style.cursor = 'auto';\n    }\n  }\n\n  onBegin(): void {\n    // no-op for now\n  }\n\n  onActivate(): void {\n    const config = this.gestureHandler.getConfig();\n\n    if (\n      (!this.view.style.cursor || this.view.style.cursor === 'auto') &&\n      config.activeCursor\n    ) {\n      this.view.style.cursor = config.activeCursor;\n    }\n  }\n\n  onEnd(): void {\n    this.tryResetCursor();\n  }\n\n  onCancel(): void {\n    this.tryResetCursor();\n  }\n\n  onFail(): void {\n    this.tryResetCursor();\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}