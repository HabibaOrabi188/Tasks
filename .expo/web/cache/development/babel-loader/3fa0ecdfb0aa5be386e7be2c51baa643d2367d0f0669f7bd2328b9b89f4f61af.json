{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Overlay = void 0;\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _reactNativeReanimated = _interopRequireDefault(require(\"react-native-reanimated\"));\nvar _excluded = [\"progress\", \"onPress\", \"style\", \"accessibilityLabel\"];\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nvar interpolateDeprecated = _reactNativeReanimated.default.interpolate,\n  interpolateNode = _reactNativeReanimated.default.interpolateNode,\n  cond = _reactNativeReanimated.default.cond,\n  greaterThan = _reactNativeReanimated.default.greaterThan;\nvar interpolate = interpolateNode != null ? interpolateNode : interpolateDeprecated;\nvar PROGRESS_EPSILON = 0.05;\nvar Overlay = exports.Overlay = React.forwardRef(function Overlay(_ref, ref) {\n  var progress = _ref.progress,\n    onPress = _ref.onPress,\n    style = _ref.style,\n    _ref$accessibilityLab = _ref.accessibilityLabel,\n    accessibilityLabel = _ref$accessibilityLab === void 0 ? 'Close drawer' : _ref$accessibilityLab,\n    props = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n  var animatedStyle = {\n    opacity: interpolate(progress, {\n      inputRange: _reactNative.Platform.OS === 'windows' || _reactNative.Platform.OS === 'macos' ? [0, 1] : [PROGRESS_EPSILON, 1],\n      outputRange: [0, 1]\n    }),\n    zIndex: cond(greaterThan(progress, PROGRESS_EPSILON), 0, -1)\n  };\n  return React.createElement(_reactNativeReanimated.default.View, _extends({}, props, {\n    ref: ref,\n    style: [styles.overlay, overlayStyle, animatedStyle, style]\n  }), React.createElement(_reactNative.Pressable, {\n    onPress: onPress,\n    style: styles.pressable,\n    accessibilityRole: \"button\",\n    accessibilityLabel: accessibilityLabel\n  }));\n});\nvar overlayStyle = _reactNative.Platform.select({\n  web: {\n    WebkitTapHighlightColor: 'transparent'\n  },\n  default: {}\n});\nvar styles = _reactNative.StyleSheet.create({\n  overlay: Object.assign({}, _reactNative.StyleSheet.absoluteFillObject, {\n    backgroundColor: 'rgba(0, 0, 0, 0.5)'\n  }),\n  pressable: {\n    flex: 1\n  }\n});","map":{"version":3,"names":["React","_interopRequireWildcard","require","_reactNative","_reactNativeReanimated","_interopRequireDefault","_excluded","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","interpolateDeprecated","Animated","interpolate","interpolateNode","cond","greaterThan","PROGRESS_EPSILON","Overlay","exports","forwardRef","_ref","ref","progress","onPress","style","_ref$accessibilityLab","accessibilityLabel","props","_objectWithoutProperties2","animatedStyle","opacity","inputRange","Platform","OS","outputRange","zIndex","createElement","View","_extends","styles","overlay","overlayStyle","Pressable","pressable","accessibilityRole","select","web","WebkitTapHighlightColor","StyleSheet","create","assign","absoluteFillObject","backgroundColor","flex"],"sources":["D:\\course\\ReactNative\\Tasks\\node_modules\\react-native-drawer-layout\\src\\views\\legacy\\Overlay.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Platform, Pressable, StyleSheet } from 'react-native';\nimport Animated from 'react-native-reanimated';\n\nconst {\n  // @ts-expect-error: this is to support reanimated 1\n  interpolate: interpolateDeprecated,\n  interpolateNode,\n  cond,\n  greaterThan,\n} = Animated;\n\nconst interpolate: typeof interpolateNode =\n  interpolateNode ?? interpolateDeprecated;\n\nconst PROGRESS_EPSILON = 0.05;\n\ntype Props = React.ComponentProps<typeof Animated.View> & {\n  progress: Animated.Node<number>;\n  onPress: () => void;\n  accessibilityLabel?: string;\n};\n\nexport const Overlay = React.forwardRef(function Overlay(\n  {\n    progress,\n    onPress,\n    style,\n    accessibilityLabel = 'Close drawer',\n    ...props\n  }: Props,\n  ref: React.Ref<Animated.View>\n) {\n  const animatedStyle = {\n    opacity: interpolate(progress, {\n      // Default input range is [PROGRESS_EPSILON, 1]\n      // On Windows, the output value is 1 when input value is out of range for some reason\n      // The default value 0 will be interpolated to 1 in this case, which is not what we want.\n      // Therefore changing input range on Windows to [0,1] instead.\n      inputRange:\n        Platform.OS === 'windows' || Platform.OS === 'macos'\n          ? [0, 1]\n          : [PROGRESS_EPSILON, 1],\n      outputRange: [0, 1],\n    }),\n    // We don't want the user to be able to press through the overlay when drawer is open\n    // One approach is to adjust the pointerEvents based on the progress\n    // But we can also send the overlay behind the screen, which works, and is much less code\n    zIndex: cond(greaterThan(progress, PROGRESS_EPSILON), 0, -1),\n  };\n\n  return (\n    <Animated.View\n      {...props}\n      ref={ref}\n      style={[styles.overlay, overlayStyle, animatedStyle, style]}\n    >\n      <Pressable\n        onPress={onPress}\n        style={styles.pressable}\n        accessibilityRole=\"button\"\n        accessibilityLabel={accessibilityLabel}\n      />\n    </Animated.View>\n  );\n});\n\nconst overlayStyle = Platform.select<Record<string, string>>({\n  web: {\n    // Disable touch highlight on mobile Safari.\n    // WebkitTapHighlightColor must be used outside of StyleSheet.create because react-native-web will omit the property.\n    WebkitTapHighlightColor: 'transparent',\n  },\n  default: {},\n});\n\nconst styles = StyleSheet.create({\n  overlay: {\n    ...StyleSheet.absoluteFillObject,\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n  },\n  pressable: {\n    flex: 1,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}