{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useSharedValue = useSharedValue;\nvar _react = require(\"react\");\nvar _animation = require(\"../animation\");\nvar _core = require(\"../core\");\nfunction useSharedValue(initialValue) {\n  var oneWayReadsOnly = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var ref = (0, _react.useRef)((0, _core.makeMutable)(initialValue, oneWayReadsOnly));\n  if (ref.current === null) {\n    ref.current = (0, _core.makeMutable)(initialValue, oneWayReadsOnly);\n  }\n  (0, _react.useEffect)(function () {\n    return function () {\n      (0, _animation.cancelAnimation)(ref.current);\n    };\n  }, []);\n  return ref.current;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","useSharedValue","_react","require","_animation","_core","initialValue","oneWayReadsOnly","arguments","length","undefined","ref","useRef","makeMutable","current","useEffect","cancelAnimation"],"sources":["D:\\course\\ReactNative\\Tasks\\node_modules\\react-native-reanimated\\lib\\module\\reanimated2\\hook\\useSharedValue.ts"],"sourcesContent":["'use strict';\nimport { useEffect, useRef } from 'react';\nimport { cancelAnimation } from '../animation';\nimport type { SharedValue } from '../commonTypes';\nimport { makeMutable } from '../core';\n\n/**\n * Lets you define [shared values](https://docs.swmansion.com/react-native-reanimated/docs/fundamentals/glossary#shared-value) in your components.\n *\n * @param initialValue - The value you want to be initially stored to a `.value` property.\n * @returns A shared value with a single `.value` property initially set to the `initialValue` - {@link SharedValue}.\n * @see https://docs.swmansion.com/react-native-reanimated/docs/core/useSharedValue\n */\nexport function useSharedValue<Value>(\n  initialValue: Value,\n  oneWayReadsOnly = false\n): SharedValue<Value> {\n  const ref = useRef<SharedValue<Value>>(\n    makeMutable(initialValue, oneWayReadsOnly)\n  );\n\n  if (ref.current === null) {\n    ref.current = makeMutable(initialValue, oneWayReadsOnly);\n  }\n\n  useEffect(() => {\n    return () => {\n      cancelAnimation(ref.current);\n    };\n  }, []);\n\n  return ref.current;\n}\n"],"mappings":"AAAA,YAAY;;AAAAA,MAAA,CAAAC,cAAA,CAAAC,OAAA;EAAAC,KAAA;AAAA;AAAAD,OAAA,CAAAE,cAAA,GAAAA,cAAA;AACZ,IAAAC,MAAA,GAAAC,OAAA;AACA,IAAAC,UAAA,GAAAD,OAAA;AAEA,IAAAE,KAAA,GAAAF,OAAA;AASO,SAASF,cAAcA,CAC5BK,YAAmB,EAEC;EAAA,IADpBC,eAAe,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,KAAK;EAEvB,IAAMG,GAAG,GAAG,IAAAC,aAAM,EAChB,IAAAC,iBAAW,EAACP,YAAY,EAAEC,eAAe,CAAC,CAC3C;EAED,IAAII,GAAG,CAACG,OAAO,KAAK,IAAI,EAAE;IACxBH,GAAG,CAACG,OAAO,GAAG,IAAAD,iBAAW,EAACP,YAAY,EAAEC,eAAe,CAAC;EAC1D;EAEA,IAAAQ,gBAAS,EAAC,YAAM;IACd,OAAO,YAAM;MACX,IAAAC,0BAAe,EAACL,GAAG,CAACG,OAAO,CAAC;IAC9B,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOH,GAAG,CAACG,OAAO;AACpB"},"metadata":{},"sourceType":"script","externalDependencies":[]}