{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.HammerGestures = exports.Gestures = void 0;\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _EnableNewWebImplementation = require(\"./EnableNewWebImplementation\");\nvar _InteractionManager = _interopRequireDefault(require(\"./web/tools/InteractionManager\"));\nvar _NodeManager = _interopRequireDefault(require(\"./web/tools/NodeManager\"));\nvar _PanGestureHandler = _interopRequireDefault(require(\"./web/handlers/PanGestureHandler\"));\nvar _TapGestureHandler = _interopRequireDefault(require(\"./web/handlers/TapGestureHandler\"));\nvar _LongPressGestureHandler = _interopRequireDefault(require(\"./web/handlers/LongPressGestureHandler\"));\nvar _PinchGestureHandler = _interopRequireDefault(require(\"./web/handlers/PinchGestureHandler\"));\nvar _RotationGestureHandler = _interopRequireDefault(require(\"./web/handlers/RotationGestureHandler\"));\nvar _FlingGestureHandler = _interopRequireDefault(require(\"./web/handlers/FlingGestureHandler\"));\nvar _NativeViewGestureHandler = _interopRequireDefault(require(\"./web/handlers/NativeViewGestureHandler\"));\nvar _ManualGestureHandler = _interopRequireDefault(require(\"./web/handlers/ManualGestureHandler\"));\nvar _HoverGestureHandler = _interopRequireDefault(require(\"./web/handlers/HoverGestureHandler\"));\nvar HammerNodeManager = _interopRequireWildcard(require(\"./web_hammer/NodeManager\"));\nvar _NativeViewGestureHandler2 = _interopRequireDefault(require(\"./web_hammer/NativeViewGestureHandler\"));\nvar _PanGestureHandler2 = _interopRequireDefault(require(\"./web_hammer/PanGestureHandler\"));\nvar _TapGestureHandler2 = _interopRequireDefault(require(\"./web_hammer/TapGestureHandler\"));\nvar _LongPressGestureHandler2 = _interopRequireDefault(require(\"./web_hammer/LongPressGestureHandler\"));\nvar _PinchGestureHandler2 = _interopRequireDefault(require(\"./web_hammer/PinchGestureHandler\"));\nvar _RotationGestureHandler2 = _interopRequireDefault(require(\"./web_hammer/RotationGestureHandler\"));\nvar _FlingGestureHandler2 = _interopRequireDefault(require(\"./web_hammer/FlingGestureHandler\"));\nvar _GestureHandlerWebDelegate = require(\"./web/tools/GestureHandlerWebDelegate\");\nfunction _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }\nfunction _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\nvar Gestures = exports.Gestures = {\n  NativeViewGestureHandler: _NativeViewGestureHandler.default,\n  PanGestureHandler: _PanGestureHandler.default,\n  TapGestureHandler: _TapGestureHandler.default,\n  LongPressGestureHandler: _LongPressGestureHandler.default,\n  PinchGestureHandler: _PinchGestureHandler.default,\n  RotationGestureHandler: _RotationGestureHandler.default,\n  FlingGestureHandler: _FlingGestureHandler.default,\n  ManualGestureHandler: _ManualGestureHandler.default,\n  HoverGestureHandler: _HoverGestureHandler.default\n};\nvar HammerGestures = exports.HammerGestures = {\n  NativeViewGestureHandler: _NativeViewGestureHandler2.default,\n  PanGestureHandler: _PanGestureHandler2.default,\n  TapGestureHandler: _TapGestureHandler2.default,\n  LongPressGestureHandler: _LongPressGestureHandler2.default,\n  PinchGestureHandler: _PinchGestureHandler2.default,\n  RotationGestureHandler: _RotationGestureHandler2.default,\n  FlingGestureHandler: _FlingGestureHandler2.default\n};\nvar _default = exports.default = {\n  handleSetJSResponder: function handleSetJSResponder(tag, blockNativeResponder) {\n    console.warn('handleSetJSResponder: ', tag, blockNativeResponder);\n  },\n  handleClearJSResponder: function handleClearJSResponder() {\n    console.warn('handleClearJSResponder: ');\n  },\n  createGestureHandler: function createGestureHandler(handlerName, handlerTag, config) {\n    if ((0, _EnableNewWebImplementation.isNewWebImplementationEnabled)()) {\n      if (!(handlerName in Gestures)) {\n        throw new Error(`react-native-gesture-handler: ${handlerName} is not supported on web.`);\n      }\n      var GestureClass = Gestures[handlerName];\n      _NodeManager.default.createGestureHandler(handlerTag, new GestureClass(new _GestureHandlerWebDelegate.GestureHandlerWebDelegate()));\n      _InteractionManager.default.getInstance().configureInteractions(_NodeManager.default.getHandler(handlerTag), config);\n    } else {\n      if (!(handlerName in HammerGestures)) {\n        throw new Error(`react-native-gesture-handler: ${handlerName} is not supported on web.`);\n      }\n      var _GestureClass = HammerGestures[handlerName];\n      HammerNodeManager.createGestureHandler(handlerTag, new _GestureClass());\n    }\n    this.updateGestureHandler(handlerTag, config);\n  },\n  attachGestureHandler: function attachGestureHandler(handlerTag, newView, _actionType, propsRef) {\n    if (!(newView instanceof HTMLElement || newView instanceof _react.default.Component)) {\n      return;\n    }\n    if ((0, _EnableNewWebImplementation.isNewWebImplementationEnabled)()) {\n      _NodeManager.default.getHandler(handlerTag).init(newView, propsRef);\n    } else {\n      HammerNodeManager.getHandler(handlerTag).setView(newView, propsRef);\n    }\n  },\n  updateGestureHandler: function updateGestureHandler(handlerTag, newConfig) {\n    if ((0, _EnableNewWebImplementation.isNewWebImplementationEnabled)()) {\n      _NodeManager.default.getHandler(handlerTag).updateGestureConfig(newConfig);\n      _InteractionManager.default.getInstance().configureInteractions(_NodeManager.default.getHandler(handlerTag), newConfig);\n    } else {\n      HammerNodeManager.getHandler(handlerTag).updateGestureConfig(newConfig);\n    }\n  },\n  getGestureHandlerNode: function getGestureHandlerNode(handlerTag) {\n    if ((0, _EnableNewWebImplementation.isNewWebImplementationEnabled)()) {\n      return _NodeManager.default.getHandler(handlerTag);\n    } else {\n      return HammerNodeManager.getHandler(handlerTag);\n    }\n  },\n  dropGestureHandler: function dropGestureHandler(handlerTag) {\n    if ((0, _EnableNewWebImplementation.isNewWebImplementationEnabled)()) {\n      _NodeManager.default.dropGestureHandler(handlerTag);\n    } else {\n      HammerNodeManager.dropGestureHandler(handlerTag);\n    }\n  },\n  flushOperations: function flushOperations() {}\n};","map":{"version":3,"names":["_react","_interopRequireDefault","require","_EnableNewWebImplementation","_InteractionManager","_NodeManager","_PanGestureHandler","_TapGestureHandler","_LongPressGestureHandler","_PinchGestureHandler","_RotationGestureHandler","_FlingGestureHandler","_NativeViewGestureHandler","_ManualGestureHandler","_HoverGestureHandler","HammerNodeManager","_interopRequireWildcard","_NativeViewGestureHandler2","_PanGestureHandler2","_TapGestureHandler2","_LongPressGestureHandler2","_PinchGestureHandler2","_RotationGestureHandler2","_FlingGestureHandler2","_GestureHandlerWebDelegate","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","Gestures","exports","NativeViewGestureHandler","PanGestureHandler","TapGestureHandler","LongPressGestureHandler","PinchGestureHandler","RotationGestureHandler","FlingGestureHandler","ManualGestureHandler","HoverGestureHandler","HammerGestures","HammerNativeViewGestureHandler","HammerPanGestureHandler","HammerTapGestureHandler","HammerLongPressGestureHandler","HammerPinchGestureHandler","HammerRotationGestureHandler","HammerFlingGestureHandler","_default","handleSetJSResponder","tag","blockNativeResponder","console","warn","handleClearJSResponder","createGestureHandler","handlerName","handlerTag","config","isNewWebImplementationEnabled","Error","GestureClass","NodeManager","GestureHandlerWebDelegate","InteractionManager","getInstance","configureInteractions","getHandler","updateGestureHandler","attachGestureHandler","newView","_actionType","propsRef","HTMLElement","React","Component","init","setView","newConfig","updateGestureConfig","getGestureHandlerNode","dropGestureHandler","flushOperations"],"sources":["D:\\course\\ReactNative\\Tasks\\node_modules\\react-native-gesture-handler\\lib\\module\\RNGestureHandlerModule.web.ts"],"sourcesContent":["import React from 'react';\n\nimport { ActionType } from './ActionType';\nimport { isNewWebImplementationEnabled } from './EnableNewWebImplementation';\n\n//GestureHandlers\nimport InteractionManager from './web/tools/InteractionManager';\nimport NodeManager from './web/tools/NodeManager';\nimport PanGestureHandler from './web/handlers/PanGestureHandler';\nimport TapGestureHandler from './web/handlers/TapGestureHandler';\nimport LongPressGestureHandler from './web/handlers/LongPressGestureHandler';\nimport PinchGestureHandler from './web/handlers/PinchGestureHandler';\nimport RotationGestureHandler from './web/handlers/RotationGestureHandler';\nimport FlingGestureHandler from './web/handlers/FlingGestureHandler';\nimport NativeViewGestureHandler from './web/handlers/NativeViewGestureHandler';\nimport ManualGestureHandler from './web/handlers/ManualGestureHandler';\nimport HoverGestureHandler from './web/handlers/HoverGestureHandler';\n\n//Hammer Handlers\nimport * as HammerNodeManager from './web_hammer/NodeManager';\nimport HammerNativeViewGestureHandler from './web_hammer/NativeViewGestureHandler';\nimport HammerPanGestureHandler from './web_hammer/PanGestureHandler';\nimport HammerTapGestureHandler from './web_hammer/TapGestureHandler';\nimport HammerLongPressGestureHandler from './web_hammer/LongPressGestureHandler';\nimport HammerPinchGestureHandler from './web_hammer/PinchGestureHandler';\nimport HammerRotationGestureHandler from './web_hammer/RotationGestureHandler';\nimport HammerFlingGestureHandler from './web_hammer/FlingGestureHandler';\nimport { Config } from './web/interfaces';\nimport { GestureHandlerWebDelegate } from './web/tools/GestureHandlerWebDelegate';\n\nexport const Gestures = {\n  NativeViewGestureHandler,\n  PanGestureHandler,\n  TapGestureHandler,\n  LongPressGestureHandler,\n  PinchGestureHandler,\n  RotationGestureHandler,\n  FlingGestureHandler,\n  ManualGestureHandler,\n  HoverGestureHandler,\n};\n\nexport const HammerGestures = {\n  NativeViewGestureHandler: HammerNativeViewGestureHandler,\n  PanGestureHandler: HammerPanGestureHandler,\n  TapGestureHandler: HammerTapGestureHandler,\n  LongPressGestureHandler: HammerLongPressGestureHandler,\n  PinchGestureHandler: HammerPinchGestureHandler,\n  RotationGestureHandler: HammerRotationGestureHandler,\n  FlingGestureHandler: HammerFlingGestureHandler,\n};\n\nexport default {\n  handleSetJSResponder(tag: number, blockNativeResponder: boolean) {\n    console.warn('handleSetJSResponder: ', tag, blockNativeResponder);\n  },\n  handleClearJSResponder() {\n    console.warn('handleClearJSResponder: ');\n  },\n  createGestureHandler<T>(\n    handlerName: keyof typeof Gestures,\n    handlerTag: number,\n    config: T\n  ) {\n    if (isNewWebImplementationEnabled()) {\n      if (!(handlerName in Gestures)) {\n        throw new Error(\n          `react-native-gesture-handler: ${handlerName} is not supported on web.`\n        );\n      }\n\n      const GestureClass = Gestures[handlerName];\n      NodeManager.createGestureHandler(\n        handlerTag,\n        new GestureClass(new GestureHandlerWebDelegate())\n      );\n      InteractionManager.getInstance().configureInteractions(\n        NodeManager.getHandler(handlerTag),\n        config as unknown as Config\n      );\n    } else {\n      if (!(handlerName in HammerGestures)) {\n        throw new Error(\n          `react-native-gesture-handler: ${handlerName} is not supported on web.`\n        );\n      }\n\n      // @ts-ignore If it doesn't exist, the error is thrown\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n      const GestureClass = HammerGestures[handlerName];\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n      HammerNodeManager.createGestureHandler(handlerTag, new GestureClass());\n    }\n\n    this.updateGestureHandler(handlerTag, config as unknown as Config);\n  },\n  attachGestureHandler(\n    handlerTag: number,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    newView: any,\n    _actionType: ActionType,\n    propsRef: React.RefObject<unknown>\n  ) {\n    if (\n      !(newView instanceof HTMLElement || newView instanceof React.Component)\n    ) {\n      return;\n    }\n\n    if (isNewWebImplementationEnabled()) {\n      //@ts-ignore Types should be HTMLElement or React.Component\n      NodeManager.getHandler(handlerTag).init(newView, propsRef);\n    } else {\n      //@ts-ignore Types should be HTMLElement or React.Component\n      HammerNodeManager.getHandler(handlerTag).setView(newView, propsRef);\n    }\n  },\n  updateGestureHandler(handlerTag: number, newConfig: Config) {\n    if (isNewWebImplementationEnabled()) {\n      NodeManager.getHandler(handlerTag).updateGestureConfig(newConfig);\n\n      InteractionManager.getInstance().configureInteractions(\n        NodeManager.getHandler(handlerTag),\n        newConfig\n      );\n    } else {\n      HammerNodeManager.getHandler(handlerTag).updateGestureConfig(newConfig);\n    }\n  },\n  getGestureHandlerNode(handlerTag: number) {\n    if (isNewWebImplementationEnabled()) {\n      return NodeManager.getHandler(handlerTag);\n    } else {\n      return HammerNodeManager.getHandler(handlerTag);\n    }\n  },\n  dropGestureHandler(handlerTag: number) {\n    if (isNewWebImplementationEnabled()) {\n      NodeManager.dropGestureHandler(handlerTag);\n    } else {\n      HammerNodeManager.dropGestureHandler(handlerTag);\n    }\n  },\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  flushOperations() {},\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}