{"ast":null,"code":"'use strict';\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createAnimatedComponent = createAnimatedComponent;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _reactNative = require(\"react-native\");\nvar _WorkletEventHandler = _interopRequireDefault(require(\"../reanimated2/WorkletEventHandler\"));\nrequire(\"../reanimated2/layoutReanimation/animationsManager\");\nvar _invariant = _interopRequireDefault(require(\"invariant\"));\nvar _ConfigHelper = require(\"../ConfigHelper\");\nvar _RNRenderer = require(\"../reanimated2/platform-specific/RNRenderer\");\nvar _core = require(\"../reanimated2/core\");\nvar _layoutReanimation = require(\"../reanimated2/layoutReanimation\");\nvar _fabricUtils = require(\"../reanimated2/fabricUtils\");\nvar _PropsRegistry = require(\"../reanimated2/PropsRegistry\");\nvar _util = require(\"../reanimated2/animation/util\");\nvar _animationBuilder = require(\"../animationBuilder\");\nvar _LayoutAnimationConfig = require(\"../reanimated2/component/LayoutAnimationConfig\");\nvar _JSPropsUpdater = _interopRequireDefault(require(\"./JSPropsUpdater\"));\nvar _utils = require(\"./utils\");\nvar _setAndForwardRef = _interopRequireDefault(require(\"./setAndForwardRef\"));\nvar _PlatformChecker = require(\"../reanimated2/PlatformChecker\");\nvar _InlinePropManager = require(\"./InlinePropManager\");\nvar _PropsFilter = require(\"./PropsFilter\");\nvar _web = require(\"../reanimated2/layoutReanimation/web\");\nfunction _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return typeof key === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nvar IS_WEB = (0, _PlatformChecker.isWeb)();\nvar IS_FABRIC = (0, _PlatformChecker.isFabric)();\nfunction onlyAnimatedStyles(styles) {\n  return styles.filter(function (style) {\n    return style === null || style === void 0 ? void 0 : style.viewDescriptors;\n  });\n}\nfunction isSameAnimatedStyle(style1, style2) {\n  return (style1 === null || style1 === void 0 ? void 0 : style1.viewsRef) === (style2 === null || style2 === void 0 ? void 0 : style2.viewsRef);\n}\nvar isSameAnimatedProps = isSameAnimatedStyle;\nfunction createAnimatedComponent(Component, options) {\n  (0, _invariant.default)(typeof Component !== 'function' || Component.prototype && Component.prototype.isReactComponent, `Looks like you're passing a function component \\`${Component.name}\\` to \\`createAnimatedComponent\\` function which supports only class components. Please wrap your function component with \\`React.forwardRef()\\` or use a class component instead.`);\n  var AnimatedComponent = function (_React$Component) {\n    (0, _inherits2.default)(AnimatedComponent, _React$Component);\n    function AnimatedComponent(props) {\n      var _this;\n      (0, _classCallCheck2.default)(this, AnimatedComponent);\n      _this = _callSuper(this, AnimatedComponent, [props]);\n      _defineProperty((0, _assertThisInitialized2.default)(_this), \"_styles\", null);\n      _defineProperty((0, _assertThisInitialized2.default)(_this), \"_animatedProps\", void 0);\n      _defineProperty((0, _assertThisInitialized2.default)(_this), \"_viewTag\", -1);\n      _defineProperty((0, _assertThisInitialized2.default)(_this), \"_isFirstRender\", true);\n      _defineProperty((0, _assertThisInitialized2.default)(_this), \"animatedStyle\", {\n        value: {}\n      });\n      _defineProperty((0, _assertThisInitialized2.default)(_this), \"_component\", null);\n      _defineProperty((0, _assertThisInitialized2.default)(_this), \"_sharedElementTransition\", null);\n      _defineProperty((0, _assertThisInitialized2.default)(_this), \"_jsPropsUpdater\", new _JSPropsUpdater.default());\n      _defineProperty((0, _assertThisInitialized2.default)(_this), \"_InlinePropManager\", new _InlinePropManager.InlinePropManager());\n      _defineProperty((0, _assertThisInitialized2.default)(_this), \"_PropsFilter\", new _PropsFilter.PropsFilter());\n      _defineProperty((0, _assertThisInitialized2.default)(_this), \"_viewInfo\", void 0);\n      _defineProperty((0, _assertThisInitialized2.default)(_this), \"context\", void 0);\n      _defineProperty((0, _assertThisInitialized2.default)(_this), \"_setComponentRef\", (0, _setAndForwardRef.default)({\n        getForwardedRef: function getForwardedRef() {\n          return _this.props.forwardedRef;\n        },\n        setLocalRef: function setLocalRef(ref) {\n          var tag = IS_WEB ? ref : (0, _reactNative.findNodeHandle)(ref);\n          var _this$props3 = _this.props,\n            layout = _this$props3.layout,\n            entering = _this$props3.entering,\n            exiting = _this$props3.exiting,\n            sharedTransitionTag = _this$props3.sharedTransitionTag;\n          if ((layout || entering || exiting || sharedTransitionTag) && tag != null) {\n            var _this$context;\n            if (!(0, _PlatformChecker.shouldBeUseWeb)()) {\n              (0, _core.enableLayoutAnimations)(true, false);\n            }\n            if (layout) {\n              (0, _core.configureLayoutAnimations)(tag, _layoutReanimation.LayoutAnimationType.LAYOUT, (0, _animationBuilder.maybeBuild)(layout, undefined, AnimatedComponent.displayName));\n            }\n            var skipEntering = (_this$context = _this.context) === null || _this$context === void 0 ? void 0 : _this$context.current;\n            if (entering && !skipEntering) {\n              var _this$props;\n              (0, _core.configureLayoutAnimations)(tag, _layoutReanimation.LayoutAnimationType.ENTERING, (0, _animationBuilder.maybeBuild)(entering, (_this$props = _this.props) === null || _this$props === void 0 ? void 0 : _this$props.style, AnimatedComponent.displayName));\n            }\n            if (exiting) {\n              var reduceMotionInExiting = 'getReduceMotion' in exiting && typeof exiting.getReduceMotion === 'function' ? (0, _util.getReduceMotionFromConfig)(exiting.getReduceMotion()) : (0, _util.getReduceMotionFromConfig)();\n              if (!reduceMotionInExiting) {\n                var _this$props2;\n                (0, _core.configureLayoutAnimations)(tag, _layoutReanimation.LayoutAnimationType.EXITING, (0, _animationBuilder.maybeBuild)(exiting, (_this$props2 = _this.props) === null || _this$props2 === void 0 ? void 0 : _this$props2.style, AnimatedComponent.displayName));\n              }\n            }\n            if (sharedTransitionTag && !IS_WEB) {\n              var _this$props$sharedTra;\n              var sharedElementTransition = (_this$props$sharedTra = _this.props.sharedTransitionStyle) != null ? _this$props$sharedTra : new _layoutReanimation.SharedTransition();\n              var reduceMotionInTransition = (0, _util.getReduceMotionFromConfig)(sharedElementTransition.getReduceMotion());\n              if (!reduceMotionInTransition) {\n                sharedElementTransition.registerTransition(tag, sharedTransitionTag);\n                _this._sharedElementTransition = sharedElementTransition;\n              }\n            }\n          }\n          if (ref !== _this._component) {\n            _this._component = ref;\n          }\n        }\n      }));\n      if ((0, _PlatformChecker.isJest)()) {\n        _this.animatedStyle = {\n          value: {}\n        };\n      }\n      return _this;\n    }\n    (0, _createClass2.default)(AnimatedComponent, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        this._attachNativeEvents();\n        this._jsPropsUpdater.addOnJSPropsChangeListener(this);\n        this._attachAnimatedStyles();\n        this._InlinePropManager.attachInlineProps(this, this._getViewInfo());\n        if (IS_WEB) {\n          (0, _web.configureWebLayoutAnimations)();\n          if (!this.props.entering) {\n            this._isFirstRender = false;\n            return;\n          }\n          if ((0, _web.getReducedMotionFromConfig)(this.props.entering)) {\n            this._isFirstRender = false;\n            return;\n          }\n          (0, _web.startWebLayoutAnimation)(this.props, this._component, _layoutReanimation.LayoutAnimationType.ENTERING);\n        }\n        this._isFirstRender = false;\n      }\n    }, {\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        var _this$_sharedElementT;\n        this._detachNativeEvents();\n        this._jsPropsUpdater.removeOnJSPropsChangeListener(this);\n        this._detachStyles();\n        this._InlinePropManager.detachInlineProps();\n        (_this$_sharedElementT = this._sharedElementTransition) === null || _this$_sharedElementT === void 0 ? void 0 : _this$_sharedElementT.unregisterTransition(this._viewTag);\n        if (IS_WEB && this.props.exiting && !(0, _web.getReducedMotionFromConfig)(this.props.exiting)) {\n          (0, _web.startWebLayoutAnimation)(this.props, this._component, _layoutReanimation.LayoutAnimationType.EXITING);\n        }\n      }\n    }, {\n      key: \"_getEventViewRef\",\n      value: function _getEventViewRef() {\n        var _this$_component, _getScrollableNode, _ref;\n        return (_this$_component = this._component) !== null && _this$_component !== void 0 && _this$_component.getScrollableNode ? (_getScrollableNode = (_ref = this._component).getScrollableNode) === null || _getScrollableNode === void 0 ? void 0 : _getScrollableNode.call(_ref) : this._component;\n      }\n    }, {\n      key: \"_attachNativeEvents\",\n      value: function _attachNativeEvents() {\n        var node = this._getEventViewRef();\n        var viewTag = null;\n        for (var key in this.props) {\n          var prop = this.props[key];\n          if ((0, _utils.has)('current', prop) && prop.current instanceof _WorkletEventHandler.default) {\n            if (viewTag === null) {\n              viewTag = (0, _reactNative.findNodeHandle)(options !== null && options !== void 0 && options.setNativeProps ? this : node);\n            }\n            prop.current.registerForEvents(viewTag, key);\n          }\n        }\n      }\n    }, {\n      key: \"_detachNativeEvents\",\n      value: function _detachNativeEvents() {\n        for (var key in this.props) {\n          var prop = this.props[key];\n          if ((0, _utils.has)('current', prop) && prop.current instanceof _WorkletEventHandler.default) {\n            prop.current.unregisterFromEvents();\n          }\n        }\n      }\n    }, {\n      key: \"_detachStyles\",\n      value: function _detachStyles() {\n        if (IS_WEB && this._styles !== null) {\n          for (var style of this._styles) {\n            if (style !== null && style !== void 0 && style.viewsRef) {\n              style.viewsRef.remove(this);\n            }\n          }\n        } else if (this._viewTag !== -1 && this._styles !== null) {\n          var _this$props$animatedP;\n          for (var _style of this._styles) {\n            _style.viewDescriptors.remove(this._viewTag);\n          }\n          if ((_this$props$animatedP = this.props.animatedProps) !== null && _this$props$animatedP !== void 0 && _this$props$animatedP.viewDescriptors) {\n            this.props.animatedProps.viewDescriptors.remove(this._viewTag);\n          }\n          if (IS_FABRIC) {\n            (0, _PropsRegistry.removeFromPropsRegistry)(this._viewTag);\n          }\n        }\n      }\n    }, {\n      key: \"_reattachNativeEvents\",\n      value: function _reattachNativeEvents(prevProps) {\n        for (var key in prevProps) {\n          var prop = this.props[key];\n          if ((0, _utils.has)('current', prop) && prop.current instanceof _WorkletEventHandler.default && prop.current.reattachNeeded) {\n            prop.current.unregisterFromEvents();\n          }\n        }\n        var viewTag = null;\n        for (var _key in this.props) {\n          var _prop = this.props[_key];\n          if ((0, _utils.has)('current', _prop) && _prop.current instanceof _WorkletEventHandler.default && _prop.current.reattachNeeded) {\n            if (viewTag === null) {\n              var node = this._getEventViewRef();\n              viewTag = (0, _reactNative.findNodeHandle)(options !== null && options !== void 0 && options.setNativeProps ? this : node);\n            }\n            _prop.current.registerForEvents(viewTag, _key);\n            _prop.current.reattachNeeded = false;\n          }\n        }\n      }\n    }, {\n      key: \"_updateFromNative\",\n      value: function _updateFromNative(props) {\n        if (options !== null && options !== void 0 && options.setNativeProps) {\n          options.setNativeProps(this._component, props);\n        } else {\n          var _this$_component2, _this$_component2$set;\n          (_this$_component2 = this._component) === null || _this$_component2 === void 0 ? void 0 : (_this$_component2$set = _this$_component2.setNativeProps) === null || _this$_component2$set === void 0 ? void 0 : _this$_component2$set.call(_this$_component2, props);\n        }\n      }\n    }, {\n      key: \"_getViewInfo\",\n      value: function _getViewInfo() {\n        var _this$_component3, _getAnimatableRef, _ref2;\n        if (this._viewInfo !== undefined) {\n          return this._viewInfo;\n        }\n        var viewTag;\n        var viewName;\n        var shadowNodeWrapper = null;\n        var viewConfig;\n        var component = (_this$_component3 = this._component) !== null && _this$_component3 !== void 0 && _this$_component3.getAnimatableRef ? (_getAnimatableRef = (_ref2 = this._component).getAnimatableRef) === null || _getAnimatableRef === void 0 ? void 0 : _getAnimatableRef.call(_ref2) : this;\n        if (IS_WEB) {\n          viewTag = this._component;\n          viewName = null;\n          shadowNodeWrapper = null;\n          viewConfig = null;\n        } else {\n          var _hostInstance$viewCon;\n          var hostInstance = _RNRenderer.RNRenderer.findHostInstance_DEPRECATED(component);\n          if (!hostInstance) {\n            throw new Error('[Reanimated] Cannot find host instance for this component. Maybe it renders nothing?');\n          }\n          viewTag = hostInstance === null || hostInstance === void 0 ? void 0 : hostInstance._nativeTag;\n          viewName = hostInstance === null || hostInstance === void 0 ? void 0 : (_hostInstance$viewCon = hostInstance.viewConfig) === null || _hostInstance$viewCon === void 0 ? void 0 : _hostInstance$viewCon.uiViewClassName;\n          viewConfig = hostInstance === null || hostInstance === void 0 ? void 0 : hostInstance.viewConfig;\n          if (IS_FABRIC) {\n            shadowNodeWrapper = (0, _fabricUtils.getShadowNodeWrapperFromRef)(this);\n          }\n        }\n        this._viewInfo = {\n          viewTag: viewTag,\n          viewName: viewName,\n          shadowNodeWrapper: shadowNodeWrapper,\n          viewConfig: viewConfig\n        };\n        return this._viewInfo;\n      }\n    }, {\n      key: \"_attachAnimatedStyles\",\n      value: function _attachAnimatedStyles() {\n        var _this2 = this;\n        var _this$props$animatedP2, _this$props$animatedP3;\n        var styles = this.props.style ? onlyAnimatedStyles((0, _utils.flattenArray)(this.props.style)) : [];\n        var prevStyles = this._styles;\n        this._styles = styles;\n        var prevAnimatedProps = this._animatedProps;\n        this._animatedProps = this.props.animatedProps;\n        var _this$_getViewInfo = this._getViewInfo(),\n          viewTag = _this$_getViewInfo.viewTag,\n          viewName = _this$_getViewInfo.viewName,\n          shadowNodeWrapper = _this$_getViewInfo.shadowNodeWrapper,\n          viewConfig = _this$_getViewInfo.viewConfig;\n        var hasReanimated2Props = ((_this$props$animatedP2 = this.props.animatedProps) === null || _this$props$animatedP2 === void 0 ? void 0 : _this$props$animatedP2.viewDescriptors) || styles.length;\n        if (hasReanimated2Props && viewConfig) {\n          (0, _ConfigHelper.adaptViewConfig)(viewConfig);\n        }\n        this._viewTag = viewTag;\n        if (prevStyles) {\n          var hasOneSameStyle = styles.length === 1 && prevStyles.length === 1 && isSameAnimatedStyle(styles[0], prevStyles[0]);\n          if (!hasOneSameStyle) {\n            var _loop = function _loop(prevStyle) {\n              var isPresent = styles.some(function (style) {\n                return isSameAnimatedStyle(style, prevStyle);\n              });\n              if (!isPresent) {\n                prevStyle.viewDescriptors.remove(viewTag);\n              }\n            };\n            for (var prevStyle of prevStyles) {\n              _loop(prevStyle);\n            }\n          }\n        }\n        styles.forEach(function (style) {\n          style.viewDescriptors.add({\n            tag: viewTag,\n            name: viewName,\n            shadowNodeWrapper: shadowNodeWrapper\n          });\n          if ((0, _PlatformChecker.isJest)()) {\n            _this2.animatedStyle.value = Object.assign({}, _this2.animatedStyle.value, style.initial.value);\n            style.animatedStyle.current = _this2.animatedStyle;\n          }\n        });\n        if (prevAnimatedProps && !isSameAnimatedProps(prevAnimatedProps, this.props.animatedProps)) {\n          prevAnimatedProps.viewDescriptors.remove(viewTag);\n        }\n        if ((_this$props$animatedP3 = this.props.animatedProps) !== null && _this$props$animatedP3 !== void 0 && _this$props$animatedP3.viewDescriptors) {\n          this.props.animatedProps.viewDescriptors.add({\n            tag: viewTag,\n            name: viewName,\n            shadowNodeWrapper: shadowNodeWrapper\n          });\n        }\n      }\n    }, {\n      key: \"componentDidUpdate\",\n      value: function componentDidUpdate(prevProps, _prevState, snapshot) {\n        this._reattachNativeEvents(prevProps);\n        this._attachAnimatedStyles();\n        this._InlinePropManager.attachInlineProps(this, this._getViewInfo());\n        if (IS_WEB && snapshot !== null && this.props.layout && !(0, _web.getReducedMotionFromConfig)(this.props.layout)) {\n          (0, _web.tryActivateLayoutTransition)(this.props, this._component, snapshot);\n        }\n      }\n    }, {\n      key: \"getSnapshotBeforeUpdate\",\n      value: function getSnapshotBeforeUpdate() {\n        if (this._component.getBoundingClientRect !== undefined) {\n          return this._component.getBoundingClientRect();\n        }\n        return null;\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var props = this._PropsFilter.filterNonAnimatedProps(this);\n        if ((0, _PlatformChecker.isJest)()) {\n          props.animatedStyle = this.animatedStyle;\n        }\n        if (this._isFirstRender && IS_WEB && props.entering && !(0, _web.getReducedMotionFromConfig)(props.entering)) {\n          var _props$style;\n          props.style = Object.assign({}, (_props$style = props.style) != null ? _props$style : {}, {\n            visibility: 'hidden'\n          });\n        }\n        var platformProps = _reactNative.Platform.select({\n          web: {},\n          default: {\n            collapsable: false\n          }\n        });\n        return _react.default.createElement(Component, _extends({}, props, {\n          ref: this._setComponentRef\n        }, platformProps));\n      }\n    }]);\n    return AnimatedComponent;\n  }(_react.default.Component);\n  _defineProperty(AnimatedComponent, \"displayName\", void 0);\n  _defineProperty(AnimatedComponent, \"contextType\", _LayoutAnimationConfig.SkipEnteringContext);\n  AnimatedComponent.displayName = `AnimatedComponent(${Component.displayName || Component.name || 'Component'})`;\n  return _react.default.forwardRef(function (props, ref) {\n    return _react.default.createElement(AnimatedComponent, _extends({}, props, ref === null ? null : {\n      forwardedRef: ref\n    }));\n  });\n}","map":{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","createAnimatedComponent","_classCallCheck2","_createClass2","_possibleConstructorReturn2","_getPrototypeOf2","_assertThisInitialized2","_inherits2","_react","_reactNative","_WorkletEventHandler","_invariant","_ConfigHelper","_RNRenderer","_core","_layoutReanimation","_fabricUtils","_PropsRegistry","_util","_animationBuilder","_LayoutAnimationConfig","_JSPropsUpdater","_utils","_setAndForwardRef","_PlatformChecker","_InlinePropManager","_PropsFilter","_web","_callSuper","t","o","e","default","_isNativeReflectConstruct","Reflect","construct","constructor","apply","Boolean","prototype","valueOf","call","_extends","assign","bind","target","i","arguments","length","source","key","hasOwnProperty","_defineProperty","obj","_toPropertyKey","enumerable","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","TypeError","Number","IS_WEB","isWeb","IS_FABRIC","isFabric","onlyAnimatedStyles","styles","filter","style","viewDescriptors","isSameAnimatedStyle","style1","style2","viewsRef","isSameAnimatedProps","Component","options","invariant","isReactComponent","name","AnimatedComponent","_React$Component","props","_this","JSPropsUpdater","InlinePropManager","PropsFilter","setAndForwardRef","getForwardedRef","forwardedRef","setLocalRef","ref","tag","findNodeHandle","_this$props3","layout","entering","exiting","sharedTransitionTag","_this$context","shouldBeUseWeb","enableLayoutAnimations","configureLayoutAnimations","LayoutAnimationType","LAYOUT","maybeBuild","displayName","skipEntering","context","current","_this$props","ENTERING","reduceMotionInExiting","getReduceMotion","getReduceMotionFromConfig","_this$props2","EXITING","_this$props$sharedTra","sharedElementTransition","sharedTransitionStyle","SharedTransition","reduceMotionInTransition","registerTransition","_sharedElementTransition","_component","isJest","animatedStyle","componentDidMount","_attachNativeEvents","_jsPropsUpdater","addOnJSPropsChangeListener","_attachAnimatedStyles","attachInlineProps","_getViewInfo","configureWebLayoutAnimations","_isFirstRender","getReducedMotionFromConfig","startWebLayoutAnimation","componentWillUnmount","_this$_sharedElementT","_detachNativeEvents","removeOnJSPropsChangeListener","_detachStyles","detachInlineProps","unregisterTransition","_viewTag","_getEventViewRef","_this$_component","_getScrollableNode","_ref","getScrollableNode","node","viewTag","prop","has","WorkletEventHandler","setNativeProps","registerForEvents","unregisterFromEvents","_styles","remove","_this$props$animatedP","animatedProps","removeFromPropsRegistry","_reattachNativeEvents","prevProps","reattachNeeded","_updateFromNative","_this$_component2","_this$_component2$set","_this$_component3","_getAnimatableRef","_ref2","_viewInfo","viewName","shadowNodeWrapper","viewConfig","component","getAnimatableRef","_hostInstance$viewCon","hostInstance","RNRenderer","findHostInstance_DEPRECATED","Error","_nativeTag","uiViewClassName","getShadowNodeWrapperFromRef","_this2","_this$props$animatedP2","_this$props$animatedP3","flattenArray","prevStyles","prevAnimatedProps","_animatedProps","_this$_getViewInfo","hasReanimated2Props","adaptViewConfig","hasOneSameStyle","_loop","prevStyle","isPresent","some","forEach","add","initial","componentDidUpdate","_prevState","snapshot","tryActivateLayoutTransition","getSnapshotBeforeUpdate","getBoundingClientRect","render","filterNonAnimatedProps","_props$style","visibility","platformProps","Platform","select","web","collapsable","React","createElement","_setComponentRef","SkipEnteringContext","forwardRef"],"sources":["D:\\course\\ReactNative\\Tasks\\node_modules\\react-native-reanimated\\lib\\module\\createAnimatedComponent\\createAnimatedComponent.tsx"],"sourcesContent":["'use strict';\nimport type {\n  Component,\n  ComponentClass,\n  ComponentType,\n  FunctionComponent,\n  MutableRefObject,\n} from 'react';\nimport React from 'react';\nimport { findNodeHandle, Platform } from 'react-native';\nimport WorkletEventHandler from '../reanimated2/WorkletEventHandler';\nimport '../reanimated2/layoutReanimation/animationsManager';\nimport invariant from 'invariant';\nimport { adaptViewConfig } from '../ConfigHelper';\nimport { RNRenderer } from '../reanimated2/platform-specific/RNRenderer';\nimport {\n  configureLayoutAnimations,\n  enableLayoutAnimations,\n} from '../reanimated2/core';\nimport {\n  SharedTransition,\n  LayoutAnimationType,\n} from '../reanimated2/layoutReanimation';\nimport type { StyleProps, ShadowNodeWrapper } from '../reanimated2/commonTypes';\nimport { getShadowNodeWrapperFromRef } from '../reanimated2/fabricUtils';\nimport { removeFromPropsRegistry } from '../reanimated2/PropsRegistry';\nimport { getReduceMotionFromConfig } from '../reanimated2/animation/util';\nimport { maybeBuild } from '../animationBuilder';\nimport { SkipEnteringContext } from '../reanimated2/component/LayoutAnimationConfig';\nimport type { AnimateProps } from '../reanimated2';\nimport JSPropsUpdater from './JSPropsUpdater';\nimport type {\n  AnimatedComponentProps,\n  AnimatedProps,\n  InitialComponentProps,\n  AnimatedComponentRef,\n  IAnimatedComponentInternal,\n  ViewInfo,\n} from './commonTypes';\nimport { has, flattenArray } from './utils';\nimport setAndForwardRef from './setAndForwardRef';\nimport {\n  isFabric,\n  isJest,\n  isWeb,\n  shouldBeUseWeb,\n} from '../reanimated2/PlatformChecker';\nimport { InlinePropManager } from './InlinePropManager';\nimport { PropsFilter } from './PropsFilter';\nimport {\n  startWebLayoutAnimation,\n  tryActivateLayoutTransition,\n  configureWebLayoutAnimations,\n  getReducedMotionFromConfig,\n} from '../reanimated2/layoutReanimation/web';\nimport type { CustomConfig } from '../reanimated2/layoutReanimation/web/config';\nimport type { FlatList, FlatListProps } from 'react-native';\n\nconst IS_WEB = isWeb();\nconst IS_FABRIC = isFabric();\n\nfunction onlyAnimatedStyles(styles: StyleProps[]): StyleProps[] {\n  return styles.filter((style) => style?.viewDescriptors);\n}\n\nfunction isSameAnimatedStyle(\n  style1?: StyleProps,\n  style2?: StyleProps\n): boolean {\n  // We cannot use equality check to compare useAnimatedStyle outputs directly.\n  // Instead, we can compare its viewsRefs.\n  return style1?.viewsRef === style2?.viewsRef;\n}\n\nconst isSameAnimatedProps = isSameAnimatedStyle;\n\ntype Options<P> = {\n  setNativeProps: (ref: AnimatedComponentRef, props: P) => void;\n};\n\n/**\n * Lets you create an Animated version of any React Native component.\n *\n * @param component - The component you want to make animatable.\n * @returns A component that Reanimated is capable of animating.\n * @see https://docs.swmansion.com/react-native-reanimated/docs/core/createAnimatedComponent\n */\n\n/**\n * @deprecated Please use `Animated.FlatList` component instead of calling `Animated.createAnimatedComponent(FlatList)` manually.\n */\n// @ts-ignore This is required to create this overload, since type of createAnimatedComponent is incorrect and doesn't include typeof FlatList\nexport function createAnimatedComponent(\n  component: typeof FlatList<unknown>,\n  options?: Options<any>\n): ComponentClass<AnimateProps<FlatListProps<unknown>>>;\n\nexport function createAnimatedComponent<P extends object>(\n  component: FunctionComponent<P>,\n  options?: Options<P>\n): FunctionComponent<AnimateProps<P>>;\n\nexport function createAnimatedComponent<P extends object>(\n  component: ComponentClass<P>,\n  options?: Options<P>\n): ComponentClass<AnimateProps<P>>;\n\nexport function createAnimatedComponent(\n  Component: ComponentType<InitialComponentProps>,\n  options?: Options<InitialComponentProps>\n): any {\n  invariant(\n    typeof Component !== 'function' ||\n      (Component.prototype && Component.prototype.isReactComponent),\n    `Looks like you're passing a function component \\`${Component.name}\\` to \\`createAnimatedComponent\\` function which supports only class components. Please wrap your function component with \\`React.forwardRef()\\` or use a class component instead.`\n  );\n\n  class AnimatedComponent\n    extends React.Component<AnimatedComponentProps<InitialComponentProps>>\n    implements IAnimatedComponentInternal\n  {\n    _styles: StyleProps[] | null = null;\n    _animatedProps?: Partial<AnimatedComponentProps<AnimatedProps>>;\n    _viewTag = -1;\n    _isFirstRender = true;\n    animatedStyle: { value: StyleProps } = { value: {} };\n    _component: AnimatedComponentRef | HTMLElement | null = null;\n    _sharedElementTransition: SharedTransition | null = null;\n    _jsPropsUpdater = new JSPropsUpdater();\n    _InlinePropManager = new InlinePropManager();\n    _PropsFilter = new PropsFilter();\n    _viewInfo?: ViewInfo;\n    static displayName: string;\n    static contextType = SkipEnteringContext;\n    context!: React.ContextType<typeof SkipEnteringContext>;\n\n    constructor(props: AnimatedComponentProps<InitialComponentProps>) {\n      super(props);\n      if (isJest()) {\n        this.animatedStyle = { value: {} };\n      }\n    }\n\n    componentDidMount() {\n      this._attachNativeEvents();\n      this._jsPropsUpdater.addOnJSPropsChangeListener(this);\n      this._attachAnimatedStyles();\n      this._InlinePropManager.attachInlineProps(this, this._getViewInfo());\n\n      if (IS_WEB) {\n        configureWebLayoutAnimations();\n\n        if (!this.props.entering) {\n          this._isFirstRender = false;\n          return;\n        }\n\n        if (getReducedMotionFromConfig(this.props.entering as CustomConfig)) {\n          this._isFirstRender = false;\n          return;\n        }\n\n        startWebLayoutAnimation(\n          this.props,\n          this._component as HTMLElement,\n          LayoutAnimationType.ENTERING\n        );\n      }\n\n      this._isFirstRender = false;\n    }\n\n    componentWillUnmount() {\n      this._detachNativeEvents();\n      this._jsPropsUpdater.removeOnJSPropsChangeListener(this);\n      this._detachStyles();\n      this._InlinePropManager.detachInlineProps();\n      this._sharedElementTransition?.unregisterTransition(this._viewTag);\n\n      if (\n        IS_WEB &&\n        this.props.exiting &&\n        !getReducedMotionFromConfig(this.props.exiting as CustomConfig)\n      ) {\n        startWebLayoutAnimation(\n          this.props,\n          this._component as HTMLElement,\n          LayoutAnimationType.EXITING\n        );\n      }\n    }\n\n    _getEventViewRef() {\n      // Make sure to get the scrollable node for components that implement\n      // `ScrollResponder.Mixin`.\n      return (this._component as AnimatedComponentRef)?.getScrollableNode\n        ? (this._component as AnimatedComponentRef).getScrollableNode?.()\n        : this._component;\n    }\n\n    _attachNativeEvents() {\n      const node = this._getEventViewRef() as AnimatedComponentRef;\n      let viewTag = null; // We set it only if needed\n\n      for (const key in this.props) {\n        const prop = this.props[key];\n        if (\n          has('current', prop) &&\n          prop.current instanceof WorkletEventHandler\n        ) {\n          if (viewTag === null) {\n            viewTag = findNodeHandle(options?.setNativeProps ? this : node);\n          }\n          prop.current.registerForEvents(viewTag as number, key);\n        }\n      }\n    }\n\n    _detachNativeEvents() {\n      for (const key in this.props) {\n        const prop = this.props[key];\n        if (\n          has('current', prop) &&\n          prop.current instanceof WorkletEventHandler\n        ) {\n          prop.current.unregisterFromEvents();\n        }\n      }\n    }\n\n    _detachStyles() {\n      if (IS_WEB && this._styles !== null) {\n        for (const style of this._styles) {\n          if (style?.viewsRef) {\n            style.viewsRef.remove(this);\n          }\n        }\n      } else if (this._viewTag !== -1 && this._styles !== null) {\n        for (const style of this._styles) {\n          style.viewDescriptors.remove(this._viewTag);\n        }\n        if (this.props.animatedProps?.viewDescriptors) {\n          this.props.animatedProps.viewDescriptors.remove(this._viewTag);\n        }\n        if (IS_FABRIC) {\n          removeFromPropsRegistry(this._viewTag);\n        }\n      }\n    }\n\n    _reattachNativeEvents(\n      prevProps: AnimatedComponentProps<InitialComponentProps>\n    ) {\n      for (const key in prevProps) {\n        const prop = this.props[key];\n        if (\n          has('current', prop) &&\n          prop.current instanceof WorkletEventHandler &&\n          prop.current.reattachNeeded\n        ) {\n          prop.current.unregisterFromEvents();\n        }\n      }\n\n      let viewTag = null;\n\n      for (const key in this.props) {\n        const prop = this.props[key];\n        if (\n          has('current', prop) &&\n          prop.current instanceof WorkletEventHandler &&\n          prop.current.reattachNeeded\n        ) {\n          if (viewTag === null) {\n            const node = this._getEventViewRef() as AnimatedComponentRef;\n            viewTag = findNodeHandle(options?.setNativeProps ? this : node);\n          }\n          prop.current.registerForEvents(viewTag as number, key);\n          prop.current.reattachNeeded = false;\n        }\n      }\n    }\n\n    _updateFromNative(props: StyleProps) {\n      if (options?.setNativeProps) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        options.setNativeProps(this._component as AnimatedComponentRef, props);\n      } else {\n        // eslint-disable-next-line no-unused-expressions\n        (this._component as AnimatedComponentRef)?.setNativeProps?.(props);\n      }\n    }\n\n    _getViewInfo(): ViewInfo {\n      if (this._viewInfo !== undefined) {\n        return this._viewInfo;\n      }\n\n      let viewTag: number | HTMLElement | null;\n      let viewName: string | null;\n      let shadowNodeWrapper: ShadowNodeWrapper | null = null;\n      let viewConfig;\n      // Component can specify ref which should be animated when animated version of the component is created.\n      // Otherwise, we animate the component itself.\n      const component = (this._component as AnimatedComponentRef)\n        ?.getAnimatableRef\n        ? (this._component as AnimatedComponentRef).getAnimatableRef?.()\n        : this;\n\n      if (IS_WEB) {\n        // At this point I assume that `_setComponentRef` was already called and `_component` is set.\n        // `this._component` on web represents HTMLElement of our component, that's why we use casting\n        viewTag = this._component as HTMLElement;\n        viewName = null;\n        shadowNodeWrapper = null;\n        viewConfig = null;\n      } else {\n        // hostInstance can be null for a component that doesn't render anything (render function returns null). Example: svg Stop: https://github.com/react-native-svg/react-native-svg/blob/develop/src/elements/Stop.tsx\n        const hostInstance = RNRenderer.findHostInstance_DEPRECATED(component);\n        if (!hostInstance) {\n          throw new Error(\n            '[Reanimated] Cannot find host instance for this component. Maybe it renders nothing?'\n          );\n        }\n        // we can access view tag in the same way it's accessed here https://github.com/facebook/react/blob/e3f4eb7272d4ca0ee49f27577156b57eeb07cf73/packages/react-native-renderer/src/ReactFabric.js#L146\n        viewTag = hostInstance?._nativeTag;\n        /**\n         * RN uses viewConfig for components for storing different properties of the component(example: https://github.com/facebook/react-native/blob/main/packages/react-native/Libraries/Components/ScrollView/ScrollViewNativeComponent.js#L24).\n         * The name we're looking for is in the field named uiViewClassName.\n         */\n        viewName = hostInstance?.viewConfig?.uiViewClassName;\n\n        viewConfig = hostInstance?.viewConfig;\n\n        if (IS_FABRIC) {\n          shadowNodeWrapper = getShadowNodeWrapperFromRef(this);\n        }\n      }\n      this._viewInfo = { viewTag, viewName, shadowNodeWrapper, viewConfig };\n      return this._viewInfo;\n    }\n\n    _attachAnimatedStyles() {\n      const styles = this.props.style\n        ? onlyAnimatedStyles(flattenArray<StyleProps>(this.props.style))\n        : [];\n      const prevStyles = this._styles;\n      this._styles = styles;\n\n      const prevAnimatedProps = this._animatedProps;\n      this._animatedProps = this.props.animatedProps;\n\n      const { viewTag, viewName, shadowNodeWrapper, viewConfig } =\n        this._getViewInfo();\n\n      // update UI props whitelist for this view\n      const hasReanimated2Props =\n        this.props.animatedProps?.viewDescriptors || styles.length;\n      if (hasReanimated2Props && viewConfig) {\n        adaptViewConfig(viewConfig);\n      }\n\n      this._viewTag = viewTag as number;\n\n      // remove old styles\n      if (prevStyles) {\n        // in most of the cases, views have only a single animated style and it remains unchanged\n        const hasOneSameStyle =\n          styles.length === 1 &&\n          prevStyles.length === 1 &&\n          isSameAnimatedStyle(styles[0], prevStyles[0]);\n\n        if (!hasOneSameStyle) {\n          // otherwise, remove each style that is not present in new styles\n          for (const prevStyle of prevStyles) {\n            const isPresent = styles.some((style) =>\n              isSameAnimatedStyle(style, prevStyle)\n            );\n            if (!isPresent) {\n              prevStyle.viewDescriptors.remove(viewTag);\n            }\n          }\n        }\n      }\n\n      styles.forEach((style) => {\n        style.viewDescriptors.add({\n          tag: viewTag,\n          name: viewName,\n          shadowNodeWrapper,\n        });\n        if (isJest()) {\n          /**\n           * We need to connect Jest's TestObject instance whose contains just props object\n           * with the updateProps() function where we update the properties of the component.\n           * We can't update props object directly because TestObject contains a copy of props - look at render function:\n           * const props = this._filterNonAnimatedProps(this.props);\n           */\n          this.animatedStyle.value = {\n            ...this.animatedStyle.value,\n            ...style.initial.value,\n          };\n          style.animatedStyle.current = this.animatedStyle;\n        }\n      });\n\n      // detach old animatedProps\n      if (\n        prevAnimatedProps &&\n        !isSameAnimatedProps(prevAnimatedProps, this.props.animatedProps)\n      ) {\n        prevAnimatedProps.viewDescriptors!.remove(viewTag as number);\n      }\n\n      // attach animatedProps property\n      if (this.props.animatedProps?.viewDescriptors) {\n        this.props.animatedProps.viewDescriptors.add({\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          tag: viewTag as number,\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          name: viewName!,\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          shadowNodeWrapper: shadowNodeWrapper!,\n        });\n      }\n    }\n\n    componentDidUpdate(\n      prevProps: AnimatedComponentProps<InitialComponentProps>,\n      _prevState: Readonly<unknown>,\n      // This type comes straight from React\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      snapshot: DOMRect | null\n    ) {\n      this._reattachNativeEvents(prevProps);\n      this._attachAnimatedStyles();\n      this._InlinePropManager.attachInlineProps(this, this._getViewInfo());\n\n      // Snapshot won't be undefined because it comes from getSnapshotBeforeUpdate method\n      if (\n        IS_WEB &&\n        snapshot !== null &&\n        this.props.layout &&\n        !getReducedMotionFromConfig(this.props.layout as CustomConfig)\n      ) {\n        tryActivateLayoutTransition(\n          this.props,\n          this._component as HTMLElement,\n          snapshot\n        );\n      }\n    }\n\n    _setComponentRef = setAndForwardRef<Component | HTMLElement>({\n      getForwardedRef: () =>\n        this.props.forwardedRef as MutableRefObject<\n          Component<Record<string, unknown>, Record<string, unknown>, unknown>\n        >,\n      setLocalRef: (ref) => {\n        // TODO update config\n\n        const tag = IS_WEB\n          ? (ref as HTMLElement)\n          : findNodeHandle(ref as Component);\n\n        const { layout, entering, exiting, sharedTransitionTag } = this.props;\n        if (\n          (layout || entering || exiting || sharedTransitionTag) &&\n          tag != null\n        ) {\n          if (!shouldBeUseWeb()) {\n            enableLayoutAnimations(true, false);\n          }\n          if (layout) {\n            configureLayoutAnimations(\n              tag,\n              LayoutAnimationType.LAYOUT,\n              maybeBuild(\n                layout,\n                undefined /* We don't have to warn user if style has common properties with animation for LAYOUT */,\n                AnimatedComponent.displayName\n              )\n            );\n          }\n          const skipEntering = this.context?.current;\n          if (entering && !skipEntering) {\n            configureLayoutAnimations(\n              tag,\n              LayoutAnimationType.ENTERING,\n              maybeBuild(\n                entering,\n                this.props?.style,\n                AnimatedComponent.displayName\n              )\n            );\n          }\n          if (exiting) {\n            const reduceMotionInExiting =\n              'getReduceMotion' in exiting &&\n              typeof exiting.getReduceMotion === 'function'\n                ? getReduceMotionFromConfig(exiting.getReduceMotion())\n                : getReduceMotionFromConfig();\n            if (!reduceMotionInExiting) {\n              configureLayoutAnimations(\n                tag,\n                LayoutAnimationType.EXITING,\n                maybeBuild(\n                  exiting,\n                  this.props?.style,\n                  AnimatedComponent.displayName\n                )\n              );\n            }\n          }\n          if (sharedTransitionTag && !IS_WEB) {\n            const sharedElementTransition =\n              this.props.sharedTransitionStyle ?? new SharedTransition();\n            const reduceMotionInTransition = getReduceMotionFromConfig(\n              sharedElementTransition.getReduceMotion()\n            );\n            if (!reduceMotionInTransition) {\n              sharedElementTransition.registerTransition(\n                tag as number,\n                sharedTransitionTag\n              );\n              this._sharedElementTransition = sharedElementTransition;\n            }\n          }\n        }\n\n        if (ref !== this._component) {\n          this._component = ref;\n        }\n      },\n    });\n\n    // This is a component lifecycle method from React, therefore we are not calling it directly.\n    // It is called before the component gets rerendered. This way we can access components' position before it changed\n    // and later on, in componentDidUpdate, calculate translation for layout transition.\n    getSnapshotBeforeUpdate() {\n      if (\n        (this._component as HTMLElement).getBoundingClientRect !== undefined\n      ) {\n        return (this._component as HTMLElement).getBoundingClientRect();\n      }\n\n      return null;\n    }\n\n    render() {\n      const props = this._PropsFilter.filterNonAnimatedProps(this);\n\n      if (isJest()) {\n        props.animatedStyle = this.animatedStyle;\n      }\n\n      // Layout animations on web are set inside `componentDidMount` method, which is called after first render.\n      // Because of that we can encounter a situation in which component is visible for a short amount of time, and later on animation triggers.\n      // I've tested that on various browsers and devices and it did not happen to me. To be sure that it won't happen to someone else,\n      // I've decided to hide component at first render. Its visibility is reset in `componentDidMount`.\n      if (\n        this._isFirstRender &&\n        IS_WEB &&\n        props.entering &&\n        !getReducedMotionFromConfig(props.entering as CustomConfig)\n      ) {\n        props.style = {\n          ...(props.style ?? {}),\n          visibility: 'hidden', // Hide component until `componentDidMount` triggers\n        };\n      }\n\n      const platformProps = Platform.select({\n        web: {},\n        default: { collapsable: false },\n      });\n\n      return (\n        <Component\n          {...props}\n          // Casting is used here, because ref can be null - in that case it cannot be assigned to HTMLElement.\n          // After spending some time trying to figure out what to do with this problem, we decided to leave it this way\n          ref={this._setComponentRef as (ref: Component) => void}\n          {...platformProps}\n        />\n      );\n    }\n  }\n\n  AnimatedComponent.displayName = `AnimatedComponent(${\n    Component.displayName || Component.name || 'Component'\n  })`;\n\n  return React.forwardRef<Component>((props, ref) => {\n    return (\n      <AnimatedComponent\n        {...props}\n        {...(ref === null ? null : { forwardedRef: ref })}\n      />\n    );\n  });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}